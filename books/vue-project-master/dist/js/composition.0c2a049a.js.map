{"version":3,"sources":["webpack:///./src/views/CompositionAPI.vue","webpack:///./src/views/CompositionAPI.vue?2047"],"names":["type","state","num1","plusNumbers","num2","result","name","setup","parseInt","render"],"mappings":"sIAEI,eAAmB,UAAf,cAAU,G,EAGZ,eAAgB,YAAV,OAAG,G,EAET,eAAgB,YAAV,OAAG,G,gDANb,eASM,YARJ,EACA,eAMM,Y,eALJ,eAA+D,SAAxDA,KAAK,O,qDAAgB,EAAAC,MAAMC,KAAI,IAAG,QAAK,8BAAE,EAAAC,aAAA,EAAAA,YAAA,sB,mBAApB,EAAAF,MAAMC,QAClC,E,eACA,eAA+D,SAAxDF,KAAK,O,qDAAgB,EAAAC,MAAMG,KAAI,IAAG,QAAK,8BAAE,EAAAD,aAAA,EAAAA,YAAA,sB,mBAApB,EAAAF,MAAMG,QAClC,EACA,eAA6B,2BAArB,EAAAH,MAAMI,QAAM,OAMX,OACbC,KAAM,aACNC,MAFa,WAGX,IAAIN,EAAQ,eAAS,CACnBC,KAAM,EACNE,KAAM,EACNC,OAAQ,IAGV,SAASF,IACPF,EAAMI,OAASG,SAASP,EAAMC,MAAQM,SAASP,EAAMG,MAGvD,MAAO,CACLH,QACAE,iBC1BN,EAAOM,OAASA,EAED","file":"js/composition.0c2a049a.js","sourcesContent":["<template>\n  <div>\n    <h2>Calculator</h2>\n    <div>\n      <input type=\"text\" v-model=\"state.num1\" @keyup=\"plusNumbers\" />\n      <span> + </span>\n      <input type=\"text\" v-model=\"state.num2\" @keyup=\"plusNumbers\" />\n      <span> = </span>\n      <span>{{state.result}}</span>\n    </div>\n  </div>\n</template>\n<script>\nimport {reactive} from 'vue';\nexport default {\n  name: 'calculator',\n  setup() {\n    let state = reactive({  //reactive를 이용해서 num1, num2, result를 실시간 변경사항에 대한 반응형 적용\n      num1: 0,\n      num2: 0,\n      result: 0\n    });\n\n    function plusNumbers() {\n      state.result = parseInt(state.num1) + parseInt(state.num2);\n    }\n\n    return {  //reactive로 선언된 state와 plusNumbers 함수를 반환함으로써 기존 data, methods 옵션 처럼 사용이 가능해짐\n      state,\n      plusNumbers\n    }\n  }\n}\n</script>","import { render } from \"./CompositionAPI.vue?vue&type=template&id=2eb9b94e\"\nimport script from \"./CompositionAPI.vue?vue&type=script&lang=js\"\nexport * from \"./CompositionAPI.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}